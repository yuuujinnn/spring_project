package supul.model;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Random;

import org.springframework.beans.factory.annotation.Autowired;

import supul.repository.BranchRepository;
import supul.repository.ReservationRepository;
import supul.repository.ThemaRepository;
import supul.repository.UserRepository;

public class datacreate {
	private static final int NUM_RESERVATIONS_TO_GENERATE = 10;
	 @Autowired
	   ReservationRepository reservationRepository;
	   @Autowired
	  	UserRepository userRepository;
	  	@Autowired
	  	BranchRepository branchRepository;
	  	@Autowired
	  	ThemaRepository themaRepository;
	  	 public void generateRandomReservations() {
       
	        Random random = new Random();

	        for (int i = 0; i < NUM_RESERVATIONS_TO_GENERATE; i++) {
	            Reservation reservation = new Reservation();
	            reservation.setRvNum("RV" + (i + 1));
	            reservation.setUserName("사용자" + (i + 1));
	            reservation.setThemaName("테마" + random.nextInt(5)); // 테마 이름은 무작위로 설정
	            Thema thema = themaRepository.findById(random.nextInt(5) + 1).orElse(null);
	            reservation.setThema(thema);
	            
	            LocalTime time = thema.getTimetable().get(random.nextInt(5));
	            reservation.setTime(time);

	            LocalDate date = LocalDate.now().minusDays(random.nextInt(90));
	            reservation.setDate(date);

	            reservation.setRvPeople(random.nextInt(3) + 1); // 1부터 10까지 무작위 인원 수 설정
	            reservation.setRvPrice(thema.getRvPrice()); // 50부터 200까지 무작위 가격 설정
	            reservation.setPrice(thema.getPrice());

	            // 사용자, 지점, 테마 엔티티 설정 (실제로는 엔티티를 검색해서 설정)
	            User user = userRepository.findById(random.nextInt(10) + 1).orElse(null);
	            reservation.setUser(user);

	            Branch branch = branchRepository.findById(random.nextInt(5) + 1).orElse(null);
	            reservation.setBranch(branch);

	          

	            reservation.setPaid(false);
	            reservation.setNoShow(false);
	            reservation.setCancle(false);
	            reservation.setPayCancle(false);
	            reservation.setRvdelete(false);
	            reservation.setReviewYN(false);

	            reservationRepository.save(reservation); // 예약 저장
	        }
	    
}
}
